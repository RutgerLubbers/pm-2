buildscript {
    ext {
        gradleCredentionalsVersion = "1.0.3"
        springBootVersion = "1.5.10.RELEASE"
        springLoadedVersion = "1.2.8.RELEASE"
    }
    repositories {
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/plugins-release" }
        maven { url "http://repo.spring.io/snapshot" }
        maven { url "http://oss.sonatype.org/content/repositories/snapshots" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.springframework:springloaded:${springLoadedVersion}"
        classpath "ru.vyarus:gradle-quality-plugin:2.3.0"
    }
}

group = "nl.hoepsch"

version '1.0-SNAPSHOT'

apply plugin: "java"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "maven"
apply plugin: "ru.vyarus.quality"


ext {
    javaVersion = "1.10"
    kafkaVersion = "2.1.0"

    jacksonVersion = "2.9.4"
    springBootVersion = "2.1.1.RELEASE"

    pmdToolVersion = "5.5.3"
    jacksonVersion = "2.9.4"
}

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

repositories {
    jcenter()
    mavenCentral()
    mavenLocal()
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }
    maven { url "http://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    compile "nl.hoepsch:power-meter-common:1.0-SNAPSHOT"

    compile "org.springframework.boot:spring-boot-starter"
    compile "org.springframework.boot:spring-boot-configuration-processor"

    compile "ch.qos.logback:logback-classic:1.2.3"

    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"


    compile "org.apache.kafka:kafka-clients:${kafkaVersion}"
    compile "commons-logging:commons-logging:1.2"

    compile "org.apache.commons:commons-csv:1.4"
}

tasks.withType(JavaCompile) {
    options.deprecation = true
    options.encoding = "UTF-8"
    // add Xlint to our compiler options (but disable processing because of Spring warnings in code)
    // and make warnings be treated like errors
    options.compilerArgs += ["-Xlint:all", "-Xlint:-processing", "-Werror"]
}

quality {
    configDir = "${rootProject.projectDir}/src/quality/config/"
}

springBoot {
    mainClass = "nl.hoepsch.pm.P1ReaderStub"
}


bootRun {
    addResources = false
    systemProperty("spring.profiles.active", System.properties["spring.profiles.active"])
    if (project.hasProperty('debugPort')) {
        jvmArgs += ["-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=" + findProperty('debugPort')]
    }
    jvmArgs += ["-Xmx1024m", "-Dspring.output.ansi.enabled=ALWAYS", "-Dfile.encoding=UTF-8"]
}
